{"version":3,"sources":["candy-machine.ts","assets/solana-gakuen-logo-01.png","header.tsx","assets/solana_school_icon.png","assets/solana_dialog2-01_v2.png","assets/solana_chan_live2d_v3.gif","assets/solana_school_front_v3_temp_4.png","grid-school.tsx","assets/solana_student_card_x6_2.png","assets/solana_card_background.png","grid-card.tsx","assets/font/kghappy.ttf","roadmap.tsx","assets/faq_bg.png","faq.tsx","assets/staff_id_temp.png","school-team.tsx","footer.tsx","home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","ms","Header","Grid","className","AppBar","position","Toolbar","src","LogoImg","alt","Typography","Button","color","GridSchool","React","useState","girl","useParallax","easing","translateX","dialog","logo","translateY","container","direction","justifyContent","alignItems","layers","image","Background","speed","scale","style","aspectRatio","ref","IconImage","variant","DialogGirlImage","Dialog","GridCard","useEffect","card","bar","Cards","Bar","GridRoadmap","title","progress25","progress50","progress75","progress100","content25","content50","content75","content100","Box","sx","flexGrow","spacing","item","xs","Faq","open_faq_1","set_open_faq_1","open_faq_2","set_open_faq_2","open_faq_3","set_open_faq_3","handle_click_faq","index","close_all_faq","FAQImg","rotate","List","width","bgcolor","component","aria-labelledby","ListItemButton","onClick","ListItemIcon","ListItemText","Collapse","in","unmountOnExit","disablePadding","pl","SchoolTeam","parallax","rotateY","Footer","setValue","BottomNavigation","showLabels","onChange","event","newValue","BottomNavigationAction","label","icon","Home","styled","WalletDialogButton","div","props","setBalance","setIsSoldOut","setItemsAvailable","setItemsRedeemed","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","refreshCandyMachineState","getBalance","balance","LAMPORTS_PER_SOL","Snackbar","autoHideDuration","onClose","Alert","process","REACT_APP_TREASURY_ADDRESS","REACT_APP_CANDY_MACHINE_CONFIG","REACT_APP_CANDY_MACHINE_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","theme","createTheme","palette","type","overrides","MuiButtonBase","root","MuiButton","textTransform","padding","startIcon","marginRight","endIcon","marginLeft","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","txTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1922724.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  // let goLiveDate = state.data.goLiveDate.toNumber();\n  // goLiveDate = new Date(goLiveDate * 1000);\n  let goLiveDate = new Date(1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n  console.log(\"test\");\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","export default __webpack_public_path__ + \"static/media/solana-gakuen-logo-01.be341fa6.png\";","import {AppBar, Button, Grid, IconButton, Toolbar, Typography} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React, {FunctionComponent} from 'react';\nimport './header.css';\nimport LogoImg from './assets/solana-gakuen-logo-01.png'\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport SportsEsportsIcon from '@mui/icons-material/SportsEsports';\nimport HomeIcon from '@mui/icons-material/Home';\n\nconst Header: FunctionComponent = ()=>{\n    const handleGotoSection = () => {\n        window.scrollTo({\n            top: 500 ,\n            behavior: 'smooth'\n        })\n    }\n\n    return (\n        <Grid className=\"headerContainer\">\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/*<IconButton edge=\"start\" className=\"menuButton\"  aria-label=\"menu\">*/}\n                    {/*    <MenuIcon />*/}\n                    {/*</IconButton>*/}\n                    <img src={LogoImg} className=\"logoImg\" alt={\"Logo image\"} />\n                    <Typography className=\"title\">Solana Gakuen</Typography>\n                    <Button color=\"inherit\" className=\"navigate\">Roadmap</Button>\n                    <Button color=\"inherit\" className=\"navigate\">FAQ</Button>\n                    <Button color=\"inherit\" className=\"navigate\">Team</Button>\n                    <Button color=\"inherit\" className=\"navigate\"><TwitterIcon/>TW</Button>\n                    <Button color=\"inherit\" className=\"navigate\"><InstagramIcon/>IG</Button>\n                    <Button color=\"inherit\" className=\"navigate\"><SportsEsportsIcon/>DC</Button>\n                </Toolbar>\n            </AppBar>\n        </Grid>\n    );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/solana_school_icon.2d7ed720.png\";","export default __webpack_public_path__ + \"static/media/solana_dialog2-01_v2.5ec4424e.png\";","export default __webpack_public_path__ + \"static/media/solana_chan_live2d_v3.093cc5a5.gif\";","export default __webpack_public_path__ + \"static/media/solana_school_front_v3_temp_4.200deb85.png\";","import {AppBar, Button, Fade, Grid, IconButton, Toolbar, Typography} from '@material-ui/core';\nimport React, {Component, FunctionComponent, useEffect} from 'react';\nimport './grid-school.css';\n import IconImage from \"./assets/solana_school_icon.png\";\nimport Dialog from './assets/solana_dialog2-01_v2.png';\nimport DialogGirlImage from './assets/solana_chan_live2d_v3.gif';\nimport Header from \"./header\";\nimport {ParallaxBanner, useParallax} from 'react-scroll-parallax';\nimport Background from './assets/solana_school_front_v3_temp_4.png';\n\nconst GridSchool: FunctionComponent = ()=>{\n    const [checked, setChecked] = React.useState(true);\n    const [timeout, setTimeout] = React.useState(2000);\n\n    //\n    // const handleChange = () => {\n    //     setChecked((prev) => !prev);\n    // };\n    //\n    // useEffect(() => {\n    //     const timer = setTimeout(() => {\n    //         handleChange();\n    //     }, 1000);\n    //     return () => clearTimeout(timer);\n    // }, []);\n    const girl = useParallax<HTMLDivElement>({\n        easing: 'easeOutQuad',\n        translateX: [-15, 0],\n    });\n\n    const dialog = useParallax<HTMLDivElement>({\n        easing: 'easeOutQuad',\n        translateX: [25, 0],\n    });\n    const logo = useParallax<HTMLDivElement>({\n        easing: 'easeOutQuad',\n        translateY: [-25, 0],\n    });\n\n\n    return (\n        <Grid   container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className=\"gridSchoolContainer\">\n            <span  className=\"background\">\n                <ParallaxBanner\n                    layers={[\n                        {\n                            image: Background,\n                            speed: -10,\n                            scale: [1, 1.2],\n                            // opacity: [0.9, 1],\n                            // translateY: [25, -5]\n                            easing: 'easeInCubic',\n                        },\n                    ]}\n                    style={{ aspectRatio: '2 / 1' }}\n                />\n            </span>\n            <Grid className=\"buttonlogo\">\n                <Grid container direction=\"column\">\n                    <div ref={logo.ref}>\n                        <img src={IconImage} className=\"iconImage\" alt={\"icon image\"}/>\n                    </div>\n                </Grid>\n                <Grid container direction=\"column\" className=\"fadein\">\n                    {/*<Fade in={checked} timeout={timeout}>*/}\n                        <Button variant=\"contained\" className=\"mintButton\">Mint Your Solana Chan!</Button>\n                    {/*</Fade>*/}\n                </Grid>\n                <Grid container direction=\"column\" className=\"girlContainer\">\n                    <div ref={girl.ref}>\n                        <img src={DialogGirlImage} alt={\"dialogGirl\"}  className=\"dialogGirlImage\"/>\n                    </div>\n                </Grid>\n                <Grid container direction=\"column\" className=\"dialogContainer\">\n                    <div ref={dialog.ref}>\n                    <img src={Dialog} alt={\"dialog\"}  className=\"dialogImage\"/>\n                    <Grid className=\"dialogContent\">\n                        <p id=\"dialogTitle\">10,000 Unique School Girls!</p>\n                        <p>\n                            A new generation of dwarves\n                            Their lost treasure is waiting for you !\n                            For centuries our tribe, composed of 3 clans, has been living in the Sif mountain. One day, while we were casually mining gold, our brother Eitri made a wrong move with his pickaxe. Suddenly, a warp hole appeared and we landed in the Blockchain… Digitized in NFTs. But our tribe got separated, and our clans were split into 3 different locations.\n                        </p>\n                    </Grid>\n                    </div>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default GridSchool;","export default __webpack_public_path__ + \"static/media/solana_student_card_x6_2.54a89f58.png\";","export default __webpack_public_path__ + \"static/media/solana_card_background.b12d6046.png\";","import {AppBar, Button, Card, CardActions, CardContent, Grid, IconButton, Toolbar, Typography} from '@material-ui/core';\nimport React, {FunctionComponent, useEffect} from 'react';\nimport './grid-card.css';\nimport Cards from './assets/solana_student_card_x6_2.png';\nimport Bar from './assets/solana_card_background.png';\nimport {ParallaxBanner, useParallax} from \"react-scroll-parallax\";\n\nconst GridCard: FunctionComponent = ()=>{\n\n    useEffect(() => {\n\n    });\n    const card = useParallax<HTMLDivElement>({\n        translateX: [-15, 15, 'easeOutQuint'],\n        translateY: [25, -75, 'easeOutQuint'],\n        scale: [1.4,1.4]\n    });\n    const bar = useParallax<HTMLDivElement>({\n        translateX: [5, -5, 'easeOutQuint'],\n        translateY: [-20, -50, 'easeOutQuint'],\n        scale: [1,1]\n    });\n\n    return (\n        <Grid container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className=\"gridCardContainer\">\n            <Grid >\n                <div className=\"cardsContainer\">\n                    <div  ref={card.ref} >\n                        <img src={Cards} alt={\"cards\"} className=\"cards\" />\n                    </div>\n\n                </div>\n                <div className=\"barContainer\">\n                    <div  ref={bar.ref} >\n                        <img src={Bar} alt={\"bar\"} className=\"bar\" />\n                    </div>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default GridCard;","export default __webpack_public_path__ + \"static/media/kghappy.370c490e.ttf\";","import React, {FunctionComponent, useEffect, useState} from 'react';\nimport './roadmap.css';\nimport IconImage from \"./assets/solana_road_map_icon.jpg\";\nimport \"./assets/font/kghappy.ttf\";\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport {useParallax} from \"react-scroll-parallax\";\nimport { Fade, Slide } from '@material-ui/core';\nimport ReactDOM from 'react-dom';\n\nconst GridRoadmap: FunctionComponent = ()=>{\n\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        // setShow(true);\n    }, []);\n\n    const title = useParallax<HTMLDivElement>({\n        translateY: [100, 0, 'easeOutQuint'],\n    });\n\n    const progress25 = useParallax<HTMLDivElement>({\n        translateX: [0, 25, 'easeOutQuint'],\n    });\n\n    const progress50 = useParallax<HTMLDivElement>({\n        translateX: [0, 25, 'easeOutQuint'],\n    });\n\n    const progress75 = useParallax<HTMLDivElement>({\n        translateX: [0, 25, 'easeOutQuint'],\n    });\n\n    const progress100 = useParallax<HTMLDivElement>({\n        translateX: [0, 25, 'easeOutQuint'],\n    });\n\n    const content25 = useParallax<HTMLDivElement>({\n        translateX: [70, 10, 'easeOutQuint'],\n    });\n\n    const content50 = useParallax<HTMLDivElement>({\n        translateX: [70, 10, 'easeOutQuint'],\n    });\n\n    const content75 = useParallax<HTMLDivElement>({\n        translateX: [70, 10, 'easeOutQuint'],\n    });\n\n    const content100 = useParallax<HTMLDivElement>({\n        translateX: [70, 10, 'easeOutQuint'],\n    });\n\n    return (\n        <Grid container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className=\"gridRoadmapContainer\">\n            <div className=\"background\"></div>\n            <Grid container\n                  direction=\"column\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  className=\"gridRoadmapTitle\">\n                <div ref={title.ref}>\n                    Roadmap\n                </div>\n            </Grid>\n            <Grid container\n                  direction=\"column\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  className=\"gridRoadmapDetail\">\n                <Box sx={{ flexGrow: 1 }}>\n                    <Grid container spacing={5}>\n                        <Grid item xs={4} className=\"roadmapPercentage\" ref={progress25.ref}>\n                            25%\n                        </Grid>\n                        <Grid item xs={8}  className=\"roadmapContent\" ref={content25.ref}>\n                            They are always looking for\n                            anything of value. However, they are unwilling to part with their fortune. They love to stack more and more wealth and their worst nightmare is to imagine a stranger stealing it. Blockchain offers them the greatest opportunity of their life, because it is an endless mine.\n                        </Grid>\n                        <Grid item xs={4} className=\"roadmapPercentage\" ref={progress50.ref}>\n                            50%\n                        </Grid>\n                        <Grid item xs={8}  className=\"roadmapContent\" ref={content50.ref}>\n                            The dwarves never had an easy\n                            life. From the beginning, they had to live in hidden places to protect themselves from the constant threats of the outside. Since then, they have been suspicious of anyone who tries to approach them. That’s why their new life in the ethereum blockchain suits them perfectly.\n                        </Grid>\n                        <Grid item xs={4} className=\"roadmapPercentage\" ref={progress75.ref}>\n                            75%\n                        </Grid>\n                        <Grid item xs={8}  className=\"roadmapContent\" ref={content75.ref}>\n                            their arrival into the crypto world has not changed their taste for luxury. As long as they are stuck in the blockchain, they might as well make some cash ! They mine crypto like crazy and don’t stop until late in the day. One thing is for sure: with them, you’ll understand what it means to win big. Join them now!\n                        </Grid>\n                        <Grid item xs={4} className=\"roadmapPercentage\" ref={progress100.ref}>\n                            100%\n                        </Grid>\n                        <Grid item xs={8} className=\"roadmapContent\" ref={content100.ref}>\n                            Continuously fighting against those who are looking for trouble, our dwarves 3.0 are formidable fighters. They stand up for their tribe and will never let their brothers down. They traded in their pickaxes and mine wagons for the latests computers and graphics cards that would make Satoshi Nakamoto blush !\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default GridRoadmap;","export default __webpack_public_path__ + \"static/media/faq_bg.3c58c581.png\";","import React, {FunctionComponent, useEffect} from 'react';\nimport './faq.css';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Collapse from '@mui/material/Collapse';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport ContactSupportIcon from '@mui/icons-material/ContactSupport';\nimport {ParallaxBanner, useParallax} from \"react-scroll-parallax\";\nimport FAQImg from \"./assets/faq_bg.png\";\nimport IconImage from \"./assets/solana_school_icon.png\";\nimport Background from \"./assets/solana_school_front_v3_temp_4.png\";\n\n\nconst Faq: FunctionComponent = ()=>{\n\n    const [open_faq_1, set_open_faq_1] = React.useState(false);\n    const [open_faq_2, set_open_faq_2] = React.useState(false);\n    const [open_faq_3, set_open_faq_3] = React.useState(false);\n\n    const handle_click_faq = (index: string) => {\n        switch (index) {\n            case \"1\":\n                close_all_faq();\n                set_open_faq_1(!open_faq_1);\n                break;\n            case \"2\":\n                close_all_faq();\n                set_open_faq_2(!open_faq_2);\n                break;\n            case \"3\":\n                close_all_faq();\n                set_open_faq_3(!open_faq_3);\n                break;\n        }\n    };\n\n    const close_all_faq = () => {\n        set_open_faq_1(false);\n        set_open_faq_2(false);\n        set_open_faq_3(false);\n    }\n\n    return (\n        <Grid container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className=\"faqContainer\">\n            <div>\n                <span  className=\"bgImg\">\n                <ParallaxBanner\n                    layers={[\n                        {\n                            image: FAQImg,\n                            speed: -10,\n                            rotate: [0, 70],\n                            scale: [1.2,1.2],\n                            // opacity: [0.9, 1],\n                            // translateY: [25, -5]\n                            easing: 'easeInCubic',\n                        },\n                    ]}\n                    style={{ aspectRatio: '2 / 1' }}\n                />\n            </span>\n            </div>\n            <Grid direction=\"column\" className=\"title\">\n                FAQ\n            </Grid>\n            <Grid direction=\"column\" className=\"faqDetail\">\n                <List\n                    sx={{width: '100%', bgcolor: 'background.paper' }}\n                    component=\"nav\"\n                    aria-labelledby=\"nested-list-subheader\"\n                >\n                    <ListItemButton onClick={()=>handle_click_faq(\"1\")}>\n                        <ListItemIcon>\n                            <ContactSupportIcon />\n                        </ListItemIcon>\n                        <ListItemText>\n                            How many Solana Chan are available?\n                        </ListItemText>\n                        {open_faq_1 ? <ExpandLess /> : <ExpandMore />}\n                    </ListItemButton>\n                    <Collapse in={open_faq_1} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItemButton sx={{ pl: 4 }}>\n                                <ListItemText>\n                                    The first chapter regroups 4499 high definition 3D dwarves NFT, stored as ERC-721 Tokens on the Ethereum Blockchain. All hosted in IFPS.\n                                </ListItemText>\n                            </ListItemButton>\n                        </List>\n                    </Collapse>\n\n                    <ListItemButton onClick={()=>handle_click_faq(\"2\")}>\n                        <ListItemIcon>\n                            <ContactSupportIcon />\n                        </ListItemIcon>\n                        <ListItemText>\n                            What Solana Gakuen Aim For?\n                        </ListItemText>\n                        {open_faq_2 ? <ExpandLess /> : <ExpandMore />}\n                    </ListItemButton>\n                    <Collapse in={open_faq_2} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItemButton sx={{ pl: 4 }}>\n                                <ListItemText>\n                                    This is a challenge that the whole team has set. Unlike many NFT projects, we wanted to create an original story that would make the « Rich Dwarves Tribe » collection meaningful. We envisioned a long-term strategy that will allow the collection to grow in value in time. As dwarves, let’s win big together\n                                </ListItemText>\n                            </ListItemButton>\n                        </List>\n                    </Collapse>\n\n                    <ListItemButton onClick={()=>handle_click_faq(\"3\")}>\n                        <ListItemIcon>\n                            <ContactSupportIcon />\n                        </ListItemIcon>\n                        <ListItemText>\n                            How can we own our Solana Chan?\n                        </ListItemText>\n                        {open_faq_3 ? <ExpandLess /> : <ExpandMore />}\n                    </ListItemButton>\n                    <Collapse in={open_faq_3} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItemButton sx={{ pl: 4 }}>\n                                <ListItemText>\n                                    This is a challenge that the whole team has set. Unlike many NFT projects, we wanted to create an original story that would make the « Rich Dwarves Tribe » collection meaningful. We envisioned a long-term strategy that will allow the collection to grow in value in time. As dwarves, let’s win big together\n                                </ListItemText>\n                            </ListItemButton>\n                        </List>\n                    </Collapse>\n                </List>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Faq;","export default __webpack_public_path__ + \"static/media/staff_id_temp.55eab959.png\";","import React, {FunctionComponent} from 'react';\nimport './school-team.css';\nimport Grid from '@mui/material/Grid';\nimport Cards from \"./assets/staff_id_temp.png\";\nimport {useParallax} from \"react-scroll-parallax\";\n\nconst SchoolTeam: FunctionComponent = ()=>{\n\n    const parallax = useParallax<HTMLDivElement>({\n        rotateY: [0, 720],\n    });\n    return (\n        <Grid container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className=\"schoolTeamContainer\"\n        ref={parallax.ref}>\n\n            <Grid container\n                  spacing={2}\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  className=\"schoolTeamTitle\"\n                  >\n                <Grid item xs={12}>\n                    SCHOOL TEAM\n                    <br/>\n                    学校の同僚\n                </Grid>\n            </Grid>\n            <Grid container\n                  spacing={2}\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  className=\"schoolTeamDetail\"\n            >\n                <Grid item xs={4} className=\"member\">\n                    <Grid item xs={12} className=\"gridcard\">\n                        <img src={Cards} alt={\"cards\"} className=\"cards\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        Andrew Cenderma\n                    </Grid>\n                    <Grid item xs={12} className=\"title\">\n                        CTO & Co-founder\n                    </Grid>\n                </Grid>\n                <Grid item xs={4} className=\"member\">\n                    <Grid item xs={12} className=\"gridcard\">\n                        <img src={Cards} alt={\"cards\"} className=\"cards\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        Minamoto Shizuka\n                    </Grid>\n                    <Grid item xs={12} className=\"title\">\n                        CEO & Co-founder\n                    </Grid>\n                </Grid>\n                <Grid item xs={4} className=\"member\">\n                    <Grid item xs={12} className=\"gridcard\">\n                        <img src={Cards} alt={\"cards\"} className=\"cards\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        Aragaki Yui\n                    </Grid>\n                    <Grid item xs={12} className=\"title\">\n                        Design Director & Co-founder\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default SchoolTeam;","import React, {FunctionComponent} from 'react';\nimport './footer.css';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport SportsEsportsIcon from '@mui/icons-material/SportsEsports';\nimport HomeIcon from '@mui/icons-material/Home';\n\nconst Footer: FunctionComponent = ()=>{\n\n    const [value, setValue] = React.useState('recents');\n\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n        setValue(newValue);\n    };\n\n    return (\n        <BottomNavigation showLabels sx={{ width: \"100%\" }} value={value} onChange={handleChange} className=\"footer\">\n            <BottomNavigationAction\n                label=\"Home\"\n                value=\"home\"\n                icon={<HomeIcon />}\n            />\n            <BottomNavigationAction\n                label=\"Twitter\"\n                value=\"twitter\"\n                icon={<TwitterIcon />}\n            />\n            <BottomNavigationAction\n                label=\"Instagram\"\n                value=\"instagram\"\n                icon={<InstagramIcon />}\n            />\n            <BottomNavigationAction\n                label=\"Discord\"\n                value=\"Discord\"\n                icon={<SportsEsportsIcon />}\n            />\n        </BottomNavigation>\n    );\n}\n\nexport default Footer;","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Grid, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\nimport Header from \"./header\";\nimport GridSchool from \"./grid-school\";\nimport GridCard from \"./grid-card\";\nimport Roadmap from \"./roadmap\";\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\nimport Faq from \"./faq\";\nimport SchoolTeam from \"./school-team\";\nimport Footer from \"./footer\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  // const [startDate, setStartDate] = useState(new Date(props.startDate));\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n      refreshCandyMachineState();\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n  return (\n    <Grid container>\n      <Header/>\n      <GridSchool/>\n      <GridCard/>\n      <Roadmap/>\n      <Faq/>\n      <SchoolTeam/>\n\n      {/*{wallet && (*/}\n      {/*  <p>Wallet {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>*/}\n      {/*)}*/}\n\n      {/*{wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>}*/}\n\n      {/*{wallet && <p>Total Available: {itemsAvailable}</p>}*/}\n\n      {/*{wallet && <p>Redeemed: {itemsRedeemed}</p>}*/}\n\n      {/*{wallet && <p>Remaining: {itemsRemaining}</p>}*/}\n      {/*<Grid container direction={\"column\"} className=\"mainContentContainer\">*/}\n      {/*      <Grid item>*/}\n\n\n      {/*        <MintContainer>*/}\n      {/*          {!wallet ? (*/}\n      {/*              <ConnectButton>Connect Wallet</ConnectButton>*/}\n      {/*          ) : (*/}\n      {/*              <MintButton*/}\n      {/*                  disabled={isSoldOut || isMinting || !isActive}*/}\n      {/*                  onClick={onMint}*/}\n      {/*                  variant=\"contained\"*/}\n      {/*              >*/}\n      {/*                {isSoldOut ? (*/}\n      {/*                    \"SOLD OUT\"*/}\n      {/*                ) : isActive ? (*/}\n      {/*                    isMinting ? (*/}\n      {/*                        <CircularProgress />*/}\n      {/*                    ) : (*/}\n      {/*                        \"MINT\"*/}\n      {/*                    )*/}\n      {/*                ) : (*/}\n      {/*                    <Countdown*/}\n      {/*                        date={startDate}*/}\n      {/*                        onMount={({ completed }) => completed && setIsActive(true)}*/}\n      {/*                        onComplete={() => setIsActive(true)}*/}\n      {/*                        renderer={renderCounter}*/}\n      {/*                    />*/}\n      {/*                )}*/}\n      {/*              </MintButton>*/}\n      {/*          )}*/}\n      {/*        </MintContainer>*/}\n\n\n      {/*      </Grid>*/}\n      {/*      <Grid item>2</Grid>*/}\n      {/*      <Grid item>3</Grid>*/}\n      {/*</Grid>*/}\n      <Footer/>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </Grid>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./home\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect={true}>\n            <WalletDialogProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                config={config}\n                connection={connection}\n                startDate={startDateSeed}\n                treasury={treasury}\n                txTimeout={txTimeout}\n              />\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ParallaxProvider} from \"react-scroll-parallax\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ParallaxProvider>\n            <App />\n      </ParallaxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}