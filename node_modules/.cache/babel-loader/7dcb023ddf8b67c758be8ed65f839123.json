{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyun/solana/git/candy-machine-mint/src/grid-card.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport './grid-card.css';\nimport Cards from './assets/solana_student_card_x6_2.png';\nimport Bar from './assets/solana_card_background.png';\nimport { ParallaxBanner, useParallax } from \"react-scroll-parallax\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GridCard = () => {\n  _s();\n\n  useEffect(() => {});\n  const card = useParallax({\n    translateX: [-15, 15, 'easeOutQuint'],\n    translateY: [25, -75, 'easeOutQuint'],\n    scale: [1.4, 1.4]\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    className: \"gridCardContainer\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardsContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: card.ref,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Cards,\n            alt: \"cards\",\n            className: \"cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(ParallaxBanner, {\n          layers: [{\n            image: Bar,\n            speed: -10,\n            translateY: [25, 100],\n            scale: [0.8, 0.8],\n            easing: 'easeInCubic'\n          }],\n          style: {\n            aspectRatio: '2 / 1'\n          },\n          className: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GridCard, \"3hebu3HRd1IvU7MO4I6F+bx2V84=\", false, function () {\n  return [useParallax];\n});\n\n_c = GridCard;\nexport default GridCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridCard\");","map":{"version":3,"sources":["/Users/andrewyun/solana/git/candy-machine-mint/src/grid-card.tsx"],"names":["Grid","React","useEffect","Cards","Bar","ParallaxBanner","useParallax","GridCard","card","translateX","translateY","scale","ref","image","speed","easing","aspectRatio"],"mappings":";;;AAAA,SAAwDA,IAAxD,QAAoG,mBAApG;AACA,OAAOC,KAAP,IAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,OAAOC,GAAP,MAAgB,qCAAhB;AACA,SAAQC,cAAR,EAAwBC,WAAxB,QAA0C,uBAA1C;;;AAGA,MAAMC,QAA2B,GAAG,MAAI;AAAA;;AAEpCL,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAGA,QAAMM,IAAI,GAAGF,WAAW,CAAiB;AACrCG,IAAAA,UAAU,EAAE,CAAC,CAAC,EAAF,EAAM,EAAN,EAAU,cAAV,CADyB;AAErCC,IAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAC,EAAN,EAAU,cAAV,CAFyB;AAGrCC,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL;AAH8B,GAAjB,CAAxB;AAMA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AACQ,IAAA,SAAS,EAAC,QADlB;AAEQ,IAAA,cAAc,EAAC,QAFvB;AAGQ,IAAA,UAAU,EAAC,QAHnB;AAIQ,IAAA,SAAS,EAAC,mBAJlB;AAAA,2BAKI,QAAC,IAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAM,UAAA,GAAG,EAAEH,IAAI,CAACI,GAAhB;AAAA,iCAAsB;AAAK,YAAA,GAAG,EAAET,KAAV;AAAiB,YAAA,GAAG,EAAE,OAAtB;AAA+B,YAAA,SAAS,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,+BACI,QAAC,cAAD;AACI,UAAA,MAAM,EAAE,CACJ;AACIU,YAAAA,KAAK,EAAET,GADX;AAEIU,YAAAA,KAAK,EAAE,CAAC,EAFZ;AAGIJ,YAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,GAAL,CAHhB;AAIIC,YAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CAJX;AAKII,YAAAA,MAAM,EAAE;AALZ,WADI,CADZ;AAUI,UAAA,KAAK,EAAE;AAAEC,YAAAA,WAAW,EAAE;AAAf,WAVX;AAWA,UAAA,SAAS,EAAC;AAXV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAzCD;;GAAMT,Q;UAKWD,W;;;KALXC,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import {AppBar, Button, Card, CardActions, CardContent, Grid, IconButton, Toolbar, Typography} from '@material-ui/core';\nimport React, {FunctionComponent, useEffect} from 'react';\nimport './grid-card.css';\nimport Cards from './assets/solana_student_card_x6_2.png';\nimport Bar from './assets/solana_card_background.png';\nimport {ParallaxBanner, useParallax} from \"react-scroll-parallax\";\nimport FAQImg from \"./assets/faq_bg.png\";\n\nconst GridCard: FunctionComponent = ()=>{\n\n    useEffect(() => {\n\n    });\n    const card = useParallax<HTMLDivElement>({\n        translateX: [-15, 15, 'easeOutQuint'],\n        translateY: [25, -75, 'easeOutQuint'],\n        scale: [1.4,1.4]\n    });\n\n    return (\n        <Grid container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className=\"gridCardContainer\">\n            <Grid >\n                <div className=\"cardsContainer\">\n                    <div  ref={card.ref} ><img src={Cards} alt={\"cards\"} className=\"cards\" />\n                    </div>\n\n                </div>\n                <span>\n                    <ParallaxBanner\n                        layers={[\n                            {\n                                image: Bar,\n                                speed: -10,\n                                translateY: [25, 100],\n                                scale: [0.8, 0.8],\n                                easing: 'easeInCubic',\n                            },\n                        ]}\n                        style={{ aspectRatio: '2 / 1' }}\n                    className=\"bar\" />\n                </span>\n\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default GridCard;"]},"metadata":{},"sourceType":"module"}