{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyun/github/solana_gakuen/src/home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Grid, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Header from \"./header\";\nimport GridSchool from \"./grid-school\";\nimport GridCard from \"./grid-card\";\nimport Roadmap from \"./roadmap\";\nimport Faq from \"./faq\";\nimport SchoolTeam from \"./school-team\";\nimport Footer from \"./footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [balance, setBalance] = useState();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: \"\",\n    severity: undefined\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridSchool, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Roadmap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Faq, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SchoolTeam, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alertState.open,\n      autoHideDuration: 6000,\n      onClose: () => setAlertState({ ...alertState,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setAlertState({ ...alertState,\n          open: false\n        }),\n        severity: alertState.severity,\n        children: alertState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"yrMnCxljPDGmXq0jqjzby4CTog4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/andrewyun/github/solana_gakuen/src/home.tsx"],"names":["useState","Grid","Snackbar","Alert","Header","GridSchool","GridCard","Roadmap","Faq","SchoolTeam","Footer","Home","props","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","itemsAvailable","setItemsAvailable","itemsRedeemed","setItemsRedeemed","itemsRemaining","setItemsRemaining","alertState","setAlertState","open","message","severity","undefined"],"mappings":";;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AAGA,SAAmCC,IAAnC,EAAyCC,QAAzC,QAAyD,mBAAzD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAQA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAOA,MAAMC,IAAI,GAAIC,KAAD,IAAsB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,EAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC,CAFiC,CAEgB;;AACjD,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C,CAHiC,CAGkB;;AACnD,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C,CAJiC,CAIkB;;AAEnD,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACyB,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,CAAC,CAAD,CAApD;AAEA,QAAM,CAAC2B,UAAD,EAAaC,aAAb,IAA8B5B,QAAQ,CAAa;AACvD6B,IAAAA,IAAI,EAAE,KADiD;AAEvDC,IAAAA,OAAO,EAAE,EAF8C;AAGvDC,IAAAA,QAAQ,EAAEC;AAH6C,GAAb,CAA5C;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAyDE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAzDF,eA2DE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEL,UAAU,CAACE,IADnB;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,OAAO,EAAE,MAAMD,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBE,QAAAA,IAAI,EAAE;AAAvB,OAAD,CAH9B;AAAA,6BAKE,QAAC,KAAD;AACE,QAAA,OAAO,EAAE,MAAMD,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBE,UAAAA,IAAI,EAAE;AAAvB,SAAD,CAD9B;AAEE,QAAA,QAAQ,EAAEF,UAAU,CAACI,QAFvB;AAAA,kBAIGJ,UAAU,CAACG;AAJd;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YA3DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0ED,CA1FD;;GAAMnB,I;;KAAAA,I;AAkGN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Grid, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Header from \"./header\";\nimport GridSchool from \"./grid-school\";\nimport GridCard from \"./grid-card\";\nimport Roadmap from \"./roadmap\";\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\nimport Faq from \"./faq\";\nimport SchoolTeam from \"./school-team\";\nimport Footer from \"./footer\";\n\nexport interface HomeProps {\n  startDate: number;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  return (\n    <Grid container>\n      <Header/>\n      <GridSchool/>\n      <GridCard/>\n      <Roadmap/>\n      <Faq/>\n      <SchoolTeam/>\n\n      {/*{wallet && (*/}\n      {/*  <p>Wallet {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>*/}\n      {/*)}*/}\n\n      {/*{wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>}*/}\n\n      {/*{wallet && <p>Total Available: {itemsAvailable}</p>}*/}\n\n      {/*{wallet && <p>Redeemed: {itemsRedeemed}</p>}*/}\n\n      {/*{wallet && <p>Remaining: {itemsRemaining}</p>}*/}\n      {/*<Grid container direction={\"column\"} className=\"mainContentContainer\">*/}\n      {/*      <Grid item>*/}\n\n\n      {/*        <MintContainer>*/}\n      {/*          {!wallet ? (*/}\n      {/*              <ConnectButton>Connect Wallet</ConnectButton>*/}\n      {/*          ) : (*/}\n      {/*              <MintButton*/}\n      {/*                  disabled={isSoldOut || isMinting || !isActive}*/}\n      {/*                  onClick={onMint}*/}\n      {/*                  variant=\"contained\"*/}\n      {/*              >*/}\n      {/*                {isSoldOut ? (*/}\n      {/*                    \"SOLD OUT\"*/}\n      {/*                ) : isActive ? (*/}\n      {/*                    isMinting ? (*/}\n      {/*                        <CircularProgress />*/}\n      {/*                    ) : (*/}\n      {/*                        \"MINT\"*/}\n      {/*                    )*/}\n      {/*                ) : (*/}\n      {/*                    <Countdown*/}\n      {/*                        date={startDate}*/}\n      {/*                        onMount={({ completed }) => completed && setIsActive(true)}*/}\n      {/*                        onComplete={() => setIsActive(true)}*/}\n      {/*                        renderer={renderCounter}*/}\n      {/*                    />*/}\n      {/*                )}*/}\n      {/*              </MintButton>*/}\n      {/*          )}*/}\n      {/*        </MintContainer>*/}\n\n\n      {/*      </Grid>*/}\n      {/*      <Grid item>2</Grid>*/}\n      {/*      <Grid item>3</Grid>*/}\n      {/*</Grid>*/}\n      <Footer/>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </Grid>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}